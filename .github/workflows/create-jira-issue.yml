name: Create Jira Issue

on:
  push:
    paths:
      - 'user_stories.md'  # Relative path to the file in the repository

jobs:
  create-jira-issue:
    runs-on: windows-latest
    steps:
      - name: Requiremnts
        uses: actions/checkout@v2

      - name: Read User Stories
        id: read_user_stories
        run: |
          $USER_STORY = Get-Content .GroupBillPaymentUserStories/user_stories.md -Raw
          echo "::set-output name=story::$USER_STORY"

      - name: Create Jira Issue
        env:
          JIRA_URL: ${{ secrets.JIRA_URL }}
          JIRA_USER: ${{ secrets.JIRA_USER }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          # Retrieve the user story from the previous step
          $USER_STORY = "${{ steps.read_user_stories.outputs.story }}"
          
          # Create the JSON payload
          $payload = @{
              fields = @{
                  project = @{
                      key = "SEISER"  # Replace with your actual project key
                  }
                  summary = $USER_STORY  # The title of the Jira issue
                  description = "Created from GitHub."
                  issuetype = @{
                      name = "User Story"  # Adjust based on your Jira configuration
                  }
              }
          } | ConvertTo-Json -Depth 10
          
          # Create the Jira issue via REST API
          Invoke-RestMethod -Uri "$env:JIRA_URL/rest/api/3/issue" `
                            -Method Post `
                            -ContentType "application/json" `
                            -Headers @{Authorization=("Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$env:JIRA_USER:$env:JIRA_API_TOKEN")))} `
                            -Body $payload
